name: Publish

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'publish'
  cancel-in-progress: true

jobs:
  select_release:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the latest release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const getLatestRelease = require('./scripts/getLatestRelease.js');
            await getLatestRelease({ github, context, core, workspace: "${{ github.workspace }}" });

      - name: Validate the release
        run: |
          if [ -z "$RELEASE_ARTIFACT_FILENAME" ]; then
            echo "::error title=No release artifact found::No release artifact found for the latest release";
            exit 1;
          else
            echo "Release artifact found: $RELEASE_ARTIFACT_FILENAME";
          fi;
          if [[ "$RELEASE_PRERELEASE" != "false" ]]; then
            echo "::error title=Pre-release artifact found::Pre-release artifact found for the latest release";
            exit 1;
          else
            echo "Release is not a pre-release";
          fi;
          if [[ "$RELEASE_DRAFT" != "false" ]]; then
            echo "::error title=Draft release found::Draft release found for the latest release";
            exit 1;
          else
            echo "Release is not a draft";
          fi;

      - name: Extract the release artifact
        run: |
          mkdir -p "${{ github.workspace }}/dist";
          tar -C "${{ github.workspace }}/dist" -xzf $RELEASE_ARTIFACT_FILENAME;
          chmod -c -R +rX "${{ github.workspace }}/dist" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line";
          done;

      - name: Build the release status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const buildReleaseStatus = require("./scripts/buildReleaseStatus.js");
            await buildReleaseStatus({ path: "${{ github.workspace }}/dist" });

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ github.workspace }}/dist"
          retention-days: 1
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
